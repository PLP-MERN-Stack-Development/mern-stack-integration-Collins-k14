// Create new post
exports.createPost = async (req, res, next) => {
  try {
    // req.body contains text fields
    // req.file contains the uploaded image (if any)
    const { title, content, category, tags, author, excerpt, isPublished } = req.body;

    const post = new Post({
      title,
      content,
      category,
      tags,
      author,
      excerpt,
      isPublished,
      featuredImage: req.file ? req.file.filename : 'default-post.jpg'
    });

    await post.save();
    await post.populate('author', 'name email');
    await post.populate('category', 'name slug');

    res.status(201).json({
      success: true,
      data: post
    });
  } catch (err) {
    next(err);
  }
};

// Update post by slug
exports.updatePost = async (req, res, next) => {
  try {
    const updatedFields = { ...req.body };

    // If a new file was uploaded, update the featuredImage
    if (req.file) {
      updatedFields.featuredImage = req.file.filename;
    }

    const updatedPost = await Post.findOneAndUpdate(
      { slug: req.params.slug },
      { $set: updatedFields },
      { new: true, runValidators: true }
    )
      .populate('author', 'name email')
      .populate('category', 'name slug');

    if (!updatedPost) {
      return res.status(404).json({
        success: false,
        message: 'Post not found'
      });
    }

    res.status(200).json({
      success: true,
      data: updatedPost
    });
  } catch (err) {
    next(err);
  }
};
